# these variables are only used for the integration test postgres service
variables:
  POSTGRES_DB: tipcards
  POSTGRES_USER: tipcards
  POSTGRES_PASSWORD: thisisonlyusedinthepipeline

test-backend-integration:
  stage: integration-and-e2e
  image: docker:27.5.1
  tags:
    - docker
  services:
    - docker:27.5.1-dind
  rules:
    - !reference [.shared_config, rules, no_tags]
    - !reference [.shared_config, rules, web_and_push]
    - when: on_success
  cache:
    - !reference [.shared_config, cache, node_modules]
  variables:
    NODE_ENV: test
  script:
    - docker compose up -d
    - |
      docker run -d \
        --name tipcards \
        --network=tipcards-local-dev_default \
        -v $(pwd):/app \
        -w /app \
        -p 4000:4000 \
        -p 4001:4001 \
        -e NODE_TLS_REJECT_UNAUTHORIZED=0 \
        node:lts-bookworm-slim /bin/bash \
        -c "npm run backend-dev"
    - |
      echo "Waiting for tipcards to become ready..."
      for i in {1..30}; do
        response=$(docker exec tipcards curl -s http://localhost:4000/api/dummy)
        if [ -n "$response" ]; then
          echo "Tipcards is up! Response:"
          echo "$response"
          break
        fi
        echo "Still waiting..."
        sleep 1
      done    
    - |
      docker run --rm \
        --network=tipcards-local-dev_default \
        -v $(pwd):/app \
        -w /app \
        -e NODE_TLS_REJECT_UNAUTHORIZED=0 \
        node:lts-bookworm-slim /bin/bash \
        -c "npm run backend-test-integration"
  after_script:
    - docker stop tipcards
    - docker compose down
  
.test-e2e:
  stage: integration-and-e2e
  image: cypress/browsers:node-20.15.1-chrome-126.0.6478.114-1-ff-128.0-edge-126.0.2592.61-1
  services:
    - name: postgres:16.3
      alias: postgres
  rules:
    - !reference [.shared_config, rules, no_tags]
    - !reference [.shared_config, rules, web_and_push]
    - when: on_success
  cache:
    - !reference [.shared_config, cache, node_modules]
  variables:
    NODE_ENV: test
  artifacts:
    name: cypress-e2e
    when: always
    paths:
      - cypress/videos/**/*.mp4
      - cypress/screenshots/**/*.png
    expire_in: 1 day
  before_script:
    - apt-get update && apt-get install -y xsel # xsel is needed for clipbordly packages 
  script:
    - cp $BACKEND_ENV_FILE_E2E_TESTS backend/.env.integrationTest
    - echo "Running database migration to prepare database for e2e tests"
    - npm run drizzle-migrate
    - echo "Installing cypress"
    - npx cypress install
    - cp $E2E_ENV_FILE_TESTS e2e/.env.local
    - echo "Running e2e tests on branch $CI_COMMIT_BRANCH"
    - sh e2e-tests.sh
