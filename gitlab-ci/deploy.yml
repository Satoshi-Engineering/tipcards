deploy-backend:
  image: alpine
  stage: deploy
  rules:
    - !reference [.shared_config, rules, no_tags]
    - !reference [.shared_config, rules, deployable_branches]
    - !reference [.shared_config, rules, web_and_push]
    - when: on_success
  dependencies:
    - build-backend
  variables:
    NODE_ENV: production
    GIT_STRATEGY: none
  before_script:
    - apk update && apk add openssh-client rsync
    - mkdir ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no" >> ~/.ssh/config
    - eval $(ssh-agent -s)
    - echo "$DEPLOY_USER_SSH_KEY" | ssh-add -
  script:
    - | 
      if [ "$CI_COMMIT_BRANCH" == "main" ]; then
        echo "Deploying on Environment Main"
        export DEPLOY_SERVER=$BACKEND_DEPLOY_SERVER_MAIN
        export DEPLOY_PATH=$BACKEND_DEPLOY_PATH_MAIN
      elif [ "$CI_COMMIT_BRANCH" == "develop" ]; then
        echo "Deploying on Environment Develop"
        export DEPLOY_SERVER=$BACKEND_DEPLOY_SERVER_DEVELOP
        export DEPLOY_PATH=$BACKEND_DEPLOY_PATH_DEVELOP
      else
        echo "ERROR: this branch $CI_COMMIT_BRANCH is not allowed to run this job! Wake up your devops team!"
        exit 1
      fi
    - echo "Deploying with user $DEPLOY_USER on server $DEPLOY_SERVER to path $DEPLOY_PATH"
    # RSYNC Dist
    - rsync -at --delete --stats ./dist/ $DEPLOY_USER@$DEPLOY_SERVER:$DEPLOY_PATH/dist-node-next
    - | 
      ssh $DEPLOY_USER@$DEPLOY_SERVER /bin/bash -s << EOT

      # 0) Make sure the script (and pipeline) stops on error
      set -e

      # 1) Stop pm2
      if [ -d $DEPLOY_PATH/dist-node ]; then
        cd $DEPLOY_PATH/dist-node
        PM2_HOME=/var/www/.pm2/ pm2 delete ecosystem.config.cjs
        cd $DEPLOY_PATH
      else
        echo "No $DEPLOY_PATH/dist-node dir found, skipping pm2 delete"
      fi

      # 2) Remove old dist-node-previous dir
      rm -rf $DEPLOY_PATH/dist-node-previous

      # 3) Save current dist to previous
      if [ -d $DEPLOY_PATH/dist-node ]; then
        mv $DEPLOY_PATH/dist-node $DEPLOY_PATH/dist-node-previous
      fi

      # 4) Make new dist available
      mv $DEPLOY_PATH/dist-node-next $DEPLOY_PATH/dist-node

      # 5) Run drizzle migrations
      cd $DEPLOY_PATH/dist-node
      node ./backend/drizzle.migrate.js

      # 6) Start pm2
      cd $DEPLOY_PATH/dist-node
      PM2_HOME=/var/www/.pm2/ pm2 start ecosystem.config.cjs

      # 7) save pm2
      PM2_HOME=/var/www/.pm2/ pm2 save

      EOT

deploy-frontend:
  image: alpine
  stage: deploy
  rules:
    - !reference [.shared_config, rules, no_tags]
    - !reference [.shared_config, rules, deployable_branches]
    - !reference [.shared_config, rules, web_and_push]
    - when: on_success
  dependencies:
    - build-frontend
  variables:
    NODE_ENV: production
    GIT_STRATEGY: none
  before_script:
    - apk update && apk add openssh-client rsync
    - mkdir ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no" >> ~/.ssh/config
    - eval $(ssh-agent -s)
    - echo "$DEPLOY_USER_SSH_KEY" | ssh-add -
  script:
    - |  
      if [ "$CI_COMMIT_BRANCH" == "main" ]; then 
        echo "Deploying on Environment Main"
        export DEPLOY_SERVER=$FRONTEND_DEPLOY_SERVER_MAIN
        export DEPLOY_PATH=$FRONTEND_DEPLOY_PATH_MAIN
      elif [ "$CI_COMMIT_BRANCH" == "develop" ]; then
        echo "Deploying on Environment Develop"
        export DEPLOY_SERVER=$FRONTEND_DEPLOY_SERVER_DEVELOP
        export DEPLOY_PATH=$FRONTEND_DEPLOY_PATH_DEVELOP
      else
        echo "ERROR: this branch $CI_COMMIT_BRANCH is not allowed to run this job! Wake up your devops team!"
        exit 1
      fi
    - echo "Deploying with user $DEPLOY_USER on server $DEPLOY_SERVER to path $DEPLOY_PATH"
    # 1) RSYNC Dist
    - rsync -at --delete --stats ./dist/frontend/ $DEPLOY_USER@$DEPLOY_SERVER:$DEPLOY_PATH/dist-www-next
    # 2) Remove old dist-www-previous dir
    - ssh $DEPLOY_USER@$DEPLOY_SERVER "rm -rf $DEPLOY_PATH/dist-www-previous"
    # 3) Save current dist to previous
    - ssh $DEPLOY_USER@$DEPLOY_SERVER "if [ -d $DEPLOY_PATH/dist-www ]; then mv $DEPLOY_PATH/dist-www $DEPLOY_PATH/dist-www-previous; fi"
    # 4) Make new dist available
    - ssh $DEPLOY_USER@$DEPLOY_SERVER "mv $DEPLOY_PATH/dist-www-next $DEPLOY_PATH/dist-www"
