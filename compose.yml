name: tipcards-local-dev

services:
  postgres:
    image: postgres:16.9
    container_name: postgres
    restart: unless-stopped
    shm_size: 128mb
    env_file:
      - ./scripts/docker/postgres/.env
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
      - ./scripts/docker/postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ports:
      - 5432:5432
    profiles: [test, dev, tools]

  lnbits-postgres:
    image: postgres:16.9
    container_name: lnbits-postgres
    restart: unless-stopped
    volumes:
      - ./data/lnbits/postgres:/var/lib/postgresql/data
      - ./scripts/docker/lnbits/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: "lnbits"
      POSTGRES_PASSWORD: "gobrrrrrr"
      POSTGRES_DB: "lnbits"
    ports:
      - 5433:5432
    profiles: [test, dev, tools]

  lnbits:
    image: lnbits/lnbits:v1.2.1
    container_name: lnbits
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4050"]
      interval: 5s
      timeout: 3s
      retries: 30
      start_period: 10s    
    depends_on:
      - lnbits-postgres
    volumes:
      - ./data/lnbits/data:/app/data
      - ./scripts/docker/lnbits/certs/combined.pem:/etc/ssl/certs/combined.pem:ro
    ports:
      - 4050:4050
    env_file:
      - ./scripts/docker/lnbits/.env
    environment:
      - SSL_CERT_FILE=/etc/ssl/certs/combined.pem
    profiles: [test, dev, tools]

  proxy:
    image: nginx:stable
    container_name: proxy
    restart: unless-stopped
    networks:
      default:
        aliases:
          - www.tipcards.internal
          - api.tipcards.internal
          - lnbits.tipcards.internal
    volumes:
      - ./scripts/docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./scripts/docker/nginx/certs:/etc/nginx/certs:ro
    ports:
      - 443:443
    depends_on:
      lnbits:
        condition: service_healthy
    profiles: [test, dev, tools]

  volt-vault-mock:
    image: mockserver/mockserver:5.15.0
    container_name: volt-vault-mock
    restart: unless-stopped
    networks:
      default:
        aliases:
          - volt-vault.tipcards.internal    
    ports:
      - 1080:1080
    environment:
      MOCKSERVER_INITIALIZATION_JSON_PATH: /config/config.json
    volumes:
      - ./scripts/docker/volt-vault-mock:/config
    profiles: [test, dev, tools]

  tipcards-backend-test:
    image: node:lts-bookworm-slim
    container_name: tipcards-backend
    restart: unless-stopped
    environment:
      - NODE_EXTRA_CA_CERTS=/app/scripts/docker/nginx/certs/rootCA.pem
    volumes:
      - .:/app
      - ./node_modules_docker:/app/node_modules
    working_dir: /app
    command: /bin/bash -c "npm run backend-debug"
    ports:
      - 4000:4000
      - 4001:4001
    depends_on:
      - postgres
      - lnbits
      - proxy
      - volt-vault-mock
    profiles: [test]

  tipcards-frontend-test:
    image: node:lts-bookworm-slim
    container_name: tipcards-frontend
    restart: unless-stopped
    environment:
      - NODE_EXTRA_CA_CERTS=/app/scripts/docker/nginx/certs/rootCA.pem
    volumes:
      - .:/app
      - ./node_modules_docker:/app/node_modules
    working_dir: /app
    command: /bin/bash -c "npm run frontend-build && npm run frontend-preview"
    ports:
      - 5050:5050
    depends_on:
      - tipcards-backend-test
    profiles: [test]

  tipcards-backend-dev:
    image: node:lts-bookworm-slim
    container_name: tipcards-backend
    restart: unless-stopped
    environment:
      - NODE_EXTRA_CA_CERTS=/app/scripts/docker/nginx/certs/rootCA.pem
    volumes:
      - .:/app
      - ./node_modules_docker:/app/node_modules
    working_dir: /app
    command: /bin/bash -c "npm run backend-dev"
    ports:
      - 4000:4000
      - 4001:4001
    depends_on:
      - postgres
      - lnbits
      - proxy
      - volt-vault-mock
    profiles: [dev]

  tipcards-frontend-dev:
    image: node:lts-bookworm-slim
    container_name: tipcards-frontend
    restart: unless-stopped
    environment:
      - NODE_EXTRA_CA_CERTS=/app/scripts/docker/nginx/certs/rootCA.pem
    volumes:
      - .:/app
      - ./node_modules_docker:/app/node_modules
    working_dir: /app
    command: /bin/bash -c "npm run frontend-dev -- --port 5050 --host"
    ports:
      - 5050:5050
    depends_on:
      - tipcards-backend-dev
    profiles: [dev]

networks:
  default:
    name: tipcards-internal
