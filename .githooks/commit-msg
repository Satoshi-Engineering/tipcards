#!/usr/bin/env node

import fs from 'fs';

// Regex to validate the commit message
const regex = /^(build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test){1}(\([\w\-\.]+\))?(!)?: ([\w .,?\/\-'])+(\n\n[\s\S]*)\n(\n(BREAKING-CHANGE|BREAKING CHANGE): \S[ \S]*\S){0,1}(\nReviewed-by: \S[ \S]*\S){0,1}\nRefs:( projects#[0-9]+)+(\n[\s\S]+)?$/;

// Path to the commit message file
const commitMsgFile = process.argv[2];

// Read the commit message from the file
const commitMsg = fs.readFileSync(commitMsgFile, 'utf-8').trim();

// Validate the commit message against the regex
if (!regex.test(commitMsg)) {
  console.error(`❌ Commit message is invalid:\n\n${commitMsg}\n`);
  console.error(
    `Expected format:
    
  <type>(<scope>): <subject> (subject can contain .,?/-')
  <BLANK LINE>
  <body> (optional)
  <BLANK LINE> (required if body is present)
  BREAKING CHANGE: <description> (optional)
  Reviewed-by: <reviewer> (optional)
  Refs: projects#<issue-number> (required)`
  );
  process.exit(1);
}

console.log('✅ Commit message is valid.');
process.exit(0);
